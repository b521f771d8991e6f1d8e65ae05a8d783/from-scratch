{
	"build": {
		"dockerfile": "Dockerfile",
		"target": "devcontainer"
	},
	"mounts": [
		"type=bind,source=/nix,target=/nix",
		// ssh and GPG setup
		"type=bind,source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/root/.ssh,readonly",
		"type=bind,source=${localEnv:HOME}${localEnv:USERPROFILE}/.gnupg,target=/root/.gnupg",
		// shell configuration & history
		"type=bind,source=${localEnv:HOME}${localEnv:USERPROFILE}/.zsh_history,target=/root/.zsh_history",
		"type=bind,source=${localEnv:HOME}${localEnv:USERPROFILE}/.zshrc,target=/root/.zshrc,readonly"
	],
	"containerEnv": {
		"HOSTNAME": "devcontainer",
		"PROMPT": "%F{cyan}%n@%m %F{yellow}%1~%f %F{green}%(!.#.$)%f "
	},
	"runArgs": [
        "--env-file",
        "${localWorkspaceFolder}/.env"
    ],
    "initializeCommand": "touch ${localWorkspaceFolder}/.env",
	"postAttachCommand": "make init", // download dependencies at startup, this is automatically executed in the right directory
	"customizations": {
		"vscode": {
			"terminal.integrated.shell.linux": "/bin/zsh",
			"extensions": [
				"ms-azuretools.vscode-docker",
				"streetsidesoftware.code-spell-checker",
				"rust-lang.rust-analyzer",
				"esbenp.prettier-vscode",
				"dbaeumer.vscode-eslint",
				"ms-vscode.cmake-tool",
				"ms-vscode.makefile-tools",
				"llvm-vs-code-extensions.vscode-clangd",
				"esbenp.prettier-vscode",
				"jock.svg",
				"swiftlang.swift-vscode",
				"bradlc.vscode-tailwindcss",
				"ms-python.python",
				"bbenoist.nix",
				"continue.continue",
				"github.vscode-codeql"
			],
			"settings": {
				"[rust]": {
					"editor.defaultFormatter": "rust-lang.rust-analyzer",
					"editor.formatOnSave": true
				},
				"rust-analyzer.linkedProjects": ["Cargo.toml"],
				"C_Cpp.intelliSenseEngine": "disabled",
				"explorer.excludeGitIgnore": false,
				"terminal.integrated.defaultProfile.linux": "zsh",
				"eslint.validate": [
					"javascript",
					"javascriptreact",
					"typescript",
					"markdown",
					"json"
				],
				"prettier.configPath": ".prettierrc",
				"eslint.workingDirectories": ["${workspaceFolder}"],
				"editor.codeActionsOnSave": {
					"source.fixAll": "explicit",
					"source.organizeImports": "explicit",
					"source.sortMembers": "explicit"
				},
				"clangd.arguments": [
					"-log=verbose",
					"-pretty",
					"--background-index",
					"--compile-commands-dir=.cmake"
				],
				"git.autofetch": true,
				"editor.formatOnSave": true,
				"makefile.configureOnOpen": false
			}
		}
	}
}